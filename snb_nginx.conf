#user administrator administrators;  #配置用户或者组，默认为nobody nobody。
#worker_processes 2;  #允许生成的进程数，默认为1
#pid /nginx/pid/nginx.pid;   #指定nginx进程运行文件存放地址
error_log /var/log/nginx/error.log debug;  #制定日志路径，级别。这个设置可以放入全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg

events {
    accept_mutex on;   #设置网路连接序列化，防止惊群现象发生，默认为on
    multi_accept on;  #设置一个进程是否同时接受多个网络连接，默认为off
    #use epoll;      #事件驱动模型，select|poll|kqueue|epoll|resig|/dev/poll|eventport
    worker_connections  1024;    #最大连接数，默认为512
}
http {
    include       /etc/nginx/mime.types;   #文件扩展名与文件类型映射表
    default_type  application/octet-stream; #默认文件类型，默认为text/plain
    #access_log off; #取消服务日志    
    log_format myFormat '$remote_addr–$remote_user [$time_local] $request $status $body_bytes_sent $http_referer $http_user_agent $http_x_forwarded_for'; #自定义格式
    access_log /var/log/nginx/access.log myFormat;  #combined为日志格式的默认值
    sendfile on;   #允许sendfile方式传输文件，默认为off，可以在http块，server块，location块。
    sendfile_max_chunk 100k;  #每个进程每次调用传输数量不能大于设定的值，默认为0，即不设上限。
    keepalive_timeout 65;  #连接超时时间，默认为75s，可以在http，server，location块。

    error_page 404 /index.html; #错误页
    limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;
    server {
        listen 80;
        server_name  127.0.0.1; # 改为域名，没域名修改为127.0.0.1:80
        #https 配置 ：ssl 、证书
        #listen 4567 ssl;
        #server_name  demo.smartnotebook.tech; # 改为域名，没域名修改为127.0.0.1:80
        #填写证书文件绝对路径
        #ssl_certificate /etc/nginx/cert/demo.pem;
        #填写证书私钥文件绝对路径
        #ssl_certificate_key /etc/nginx/cert/demo.key;

        
        client_max_body_size 30m; # 设置上传文件和请求体参数大小
        charset utf-8;
        location / {
            root /usr/share/nginx/html; # html访问路径
            index index.html; # html文件名称
            try_files $uri $uri/ /index.html; # 解决单页面应用刷新404问题
        location /api {
            proxy_pass   http://server:9000/api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;  
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 14400s;  #nginx会等待多长时间来获得请求的响应
            proxy_send_timeout 30s;  #发送请求给upstream服务器的超时时间  
            proxy_ignore_client_abort on;
            limit_req zone=api burst=10 nodelay;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          }
        #location /kernel {
        #    proxy_pass   http://172.30.81.116:8000/api;
        #}
        #location /api/snb {
        #    proxy_pass   http://172.30.81.116:8000/api/snb;
        #}
    }
}

fastcgi_buffer_size 3096k;
fastcgi_buffers 6 3096k;
fastcgi_busy_buffers_size 3096k;
fastcgi_temp_file_write_size 3096k;
fastcgi_intercept_errors on;

gzip on;
gzip_comp_level 5;  # 指定压缩级别
gzip_types text/plain text/css application/javascript application/json application/csv; # 启用对应的 MIME 类型的压缩
gzip_min_length 256; # 设置压缩的最小字节数，超过该大小的才会被压缩
gzip_vary on; # 启用压缩后的响应头，显示被压缩的文件大小

}
